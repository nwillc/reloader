
plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.nwillc.vplugin' version '2.0.1'
    id 'jacoco'
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.tinylog:tinylog:' + tiny_log_version

    runtime 'org.tinylog:slf4j-binding:' + tiny_log_version

    testCompile 'com.github.nwillc:jdk_contract_tests:' + jdk_contract_tests_version,
            'org.assertj:assertj-core:' + assertj_version,
            'junit:junit:' + junit_version
}

group = 'com.github.nwillc'
version = '1.0.1-SNAPSHOT'
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

compileJava {
    options.compilerArgs += ['-XDignore.symbol.file']
    options.fork = true 
    options.forkOptions.executable = 'javac' 
}

test {
    maxParallelForks 4

    beforeTest { descriptor ->
        logger.lifecycle('\tRunning ' + descriptor.className + '.' + descriptor.name)
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle('\tTests run: ' + result.testCount
                    + ', Failures: ' + result.failedTestCount
                    + ', Skipped: ' + result.skippedTestCount)
        }
    }

    testLogging {
        exceptionFormat 'full'
    }
}

task sourceJar(type: Jar) {
    from 'src/main/java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

task publishJavadoc(type: Copy, dependsOn: javadoc) {
    from('build/docs/javadoc')
    into('docs/javadoc')
}

bintrayUpload.onlyIf { !project.version.toString().endsWith('SNAPSHOT') }

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    dryRun = false
    publish = true
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = project.name
        desc = 'A java package providing reloading and upgrading for java applications.'
        websiteUrl = 'https://github.com/nwillc/reloader'
        issueTrackerUrl = 'https://github.com/nwillc/reloader/issues'
        vcsUrl = 'https://github.com/nwillc/reloader.git'
        licenses = ['ISC']
        labels = ['jdk8', 'reload']
        publicDownloadNumbers = true
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
